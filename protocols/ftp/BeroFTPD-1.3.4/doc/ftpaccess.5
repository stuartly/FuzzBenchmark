.\" ftpaccess.5
.\" 
.\" 
.\" @(#)$Id: ftpaccess.5,v 1.1.1.1 1998/08/21 18:10:28 root Exp $
.\"
.TH ftpaccess 5 
.SH Name
ftpaccess \- ftpd configuration file
.SH Description
The ftpaccess file is used to configure the operation of 
.BR ftpd(1) .
.SH Access Capabilities
.TP 0.5i
.B autogroup <groupname> <class> [<class> ...]
If an ANONYMOUS user is a member of any of <class>, the ftp
server will perform a setegid() to <groupname>.  This allows
access to group-and-owner-read-only files and directories to
a particular class of anonymous users. <groupname> is a valid
group from /etc/group (or wherever mechanism your
.IR getgrent(2)
library routine uses).
.TP 0.5i
.B class <class> <typelist> <addrglob> [<addrglob> ...]
Define <class> of users, with source addresses of the form
<addrglob>.  Multiple members of <class> may be defined.  There
may be multiple "class" commands listing additional members of
the class.  If multiple "class" commands can apply to the
current session, the first one listed in the access file is
used.  Failing to define a valid class for a host will cause
access to be denied.  <typelist> is a comma-separated list of
any of the keywords "anonymous", "guest" and "real".  If the
"real" keyword is included, the class can match users using FTP
to access real accounts, and if the "anonymous" keyword is
included the class can match users using anonymous FTP.  The
"guest" keyword matches guest access accounts (see "guestgroup"
for more information)

<addrglob> may be a globbed domain name or a globbed numeric
address.  It may also be the name of a file, starting with a slash ('/'),
which contains additional address globs, as well as in the form address:netmask
or address/cidr.

.TP 0.5i
.B deny <addrglob> <message_file>
Always deny access to host(s) matching <addrglob>.  <message_file>
is displayed.  <addrglob> may be "!nameserved" to deny access to
sites without a working nameserver.  It may also be the name of a file,
starting with a slash ('/'), which contains additional address globs, as well
as in the form address:netmask or address/cidr.
.TP 0.5i
.B guestgroup <groupname> [<groupname> ...]
.TP 0.5i
.B guestuser <username> [<username> ...]
.TP 0.5i
.B realgroup <groupname> [<groupname> ...]
.TP 0.5i
.B realuser <username> [<username> ...]

For guestgroup, if a REAL user is a member of any of <groupname>, the session
is set up exactly as with anonymous FTP.  In other words, a
chroot() is done, and the user is no longer permitted to issue
the USER and PASS commands.  <groupname> is a valid group
from /etc/group (or whatever mechanism your 
.IR getgrent(3) 
library routine uses).

The user's home directory must be properly set up, exactly as
anonymous FTP would be.  The home directory field of the
passwd entry is divided into two directories.  The first
field is the root directory which will be the argument
to the 
.IR chroot(2) 
call.  The second half is the user's 
home directory relative to the root directory.  The
two halves are separated by a "/./".

Example:

in /etc/passwd, the real entry:

guest1:<passwd>:100:92:Guest Account:/ftp/./incoming:/etc/ftponly

When guest1 successfully logs in, the ftp server will
chroot("/ftp") and then chdir("/incoming").  The
guest user will only be able to access the directory structure
under /ftp (which will look and act as / to guest1), just as an
anonymous FTP user would.
.PP
The group name may be specified by either name or numeric ID.  To use a
numeric group ID, place a '%' before the number.  Ranges may be given.  Use
an asterisk to mean all groups.

guestuser works like guestgroup, except uses the user name (or numeric ID).

realuser and realgroup have the same syntax, but reverse the effect of guestuser and guestgroup.
They allow real user access when the remote user would otherwise be determined a guest.

For example:

  guestuser *
  realgroup admin

causes all non-anonymous users to be treated as guest, with the sole exception of users in
the admin group who are granted real user access.

.TP 0.5i
.B nice <nice-delta> [<class>]
Adjust the process nice value of the ftpd server process
by the indicated <nice-delta> value if the remote user is a member of
the named <class>.  If <class> is not specified, then use <nice-delta>
as the default adjustment to the ftpd server process nice value.  This
default nice value adjustment is used to adjust the nice value of the
server process only for those users who do not belong to any class for
which a class-specific `nice' directive exists in the ftpaccess file.
.TP 0.5i
.B defumask <umask> [<class>]
Set the umask applied to files created by daemon if the remote use is a
member of the named class.  If <class> is not specified, then use the
umask as the default for classes which do not have one specified.
.TP 0.5i
.B tcpwindow <size> [<class>]
Set the TCP window size for the data connection.  This can be used to
control network traffic.  For instance, slow PPP dialin links may need
smaller TCP windows to speed up throughput.  If you don't know what this
does, don't play with it.
.TP 0.5i
.B file-limit [<raw>] <in|out|total> <count> [<class>]
Limit the number of data files a user in the given class may transfer.  The
limit may be placed on files in, out or total.  If no class is specified,
the limit is the default for classes which do not have a limit specified.
The optional
.B raw
parameter applies the limit to the total traffic rather than just data files.
.TP 0.5i
.B byte-limit [<raw>] <in|out|total> <count> [<class>]
Limit the number of data bytes a user in the given class may transfer.  The 
limit may be place on bytes in, out or total.  If no lcass is specified,
the limit is the default for classes which do not have a limit specified.  Note
that this limit will preventtransfers once it has been exceeded, but will not
terminate a transfer in progress.  The optional
.B raw
parameter applies the limit to total traffic rather than just data files.
.TP 0.5i
.B limit-time {*|anonymous|guest} <minutes>
Limit the total time a session can take.
By default, there is no limit.
Real users are never limited.
.TP 0.5i
.B guestserver [<hostname>]
Controls which hosts may be used for anonymous or guest access.  If
used without <hostname>, denies all guest or anonymous access to this
site.  More than one <hostname> may be specified.  Guest and anonymous
access will only be allowed on the named machines.  If access is denied,
the user will be ased to use the first <hostname> listed.
.TP 0.5i
.B limit <class> <n> <times> <message_file>
Limit <class> to <n> users at times <times>, displaying
<message_file> if user is denied access.  Limit check is
performed at login time only.  If multiple "limit" commands can
apply to the current session, the first applicable one is
used.  Failing to define a valid limit, or a limit of -1, is
equivalent to unlimited. <times> is in same format as the times
in the UUCP L.sys file.
.TP 0.5i
.B noretrieve [absolute|relative|-] <filename> <filename> ....
Always deny retrieve-ability of these files. If the files are an
absolute path specification (i.e. begins with '/' character) then
only those files are marked un-gettable, otherwise all files with
matching the filename are refused transfer. Example:

	noretrieve /etc/passwd core

specifies no one will be able to get the file /etc/passwd whereas
they will be allowed to transfer a file `passwd' if it is not in 
/etc. On the other hand no one will be able to get files named
`core' wherever it is.
.PP
Absolute path specifications ending with a slash ('/') are taken to mean all
files in the named directory are marked un-gettable.
.PP
The <filename> may be specified as a file glob, or regular expression.
.PP
The optional first parameter selects whether names are intepreted as
absolute or relative to the current chroot'd environment.  The default
is to intepret names beginning with a slash as absolute.
.TP 0.5i
.B allow-retrieve [absolute|relative|-] <filename> ...
Allows retrieval of files which would otherwise be denied by noretrieve.
.TP 0.5i
.B loginfails <number>
After <number> login failures, log a "repeated login failures"
message and terminate the FTP connection.  Default value is 5.
.TP 0.5i
.B private <yes|no>
After user logs in, the SITE GROUP and SITE GPASS commands may
be used to specify an enhanced access group and associated
password.  If the group name and password are valid, the user
becomes (via setegid()) a member of the group specified in the
group access file /etc/ftpgroups.

The format of the group access file is:

access_group_name:encrypted_password:real_group_name

where access_group_name is an arbitrary (alphanumeric +
punctuation) string.  encrypted_password is the password
encrypted via 
.IR crypt(3), 
exactly like in /etc/passwd.
real_group_name is the name of a valid group listed in
/etc/group.

NOTE: For this option to work for anonymous FTP users, the ftp
server must keep /etc/group permanently open and the group
access file is loaded into memory.  This means that (1) the ftp
server now has an additional file descriptor open, and (2) the
necessary passwords and access privileges granted to users via
SITE GROUP will be static for the duration of an FTP session.
If you have an urgent need to change the access groups and/or
passwords *NOW*, you just kill all of the running FTP servers.
.SH Informational Capabilities
.TP 0.5i
.B greeting full|brief|terse
Allows you to control how much information is given out before the remote user
logs in.  'greeting full' is the default and shows the hostname and daemon
version.  'greeting brief' whose shows the hostname.  'greeting terse' simply
says "FTP server ready."  Although full is the default, brief is recommended.
.TP 0.5i
.B banner <path>
Works similarly to the message command, except that the banner
is displayed before the user enters the username/password.  The
<path> is relative to the real system root, not the base of the
anonymous FTP directory.

WARNING: use of this command can completely prevent non-compliant
FTP clients from making use of the FTP server.  Not all clients
can handle multi-line responses (which is how the banner is
displayed).
.TP 0.5i
.B hostname <some.host.name>
Defines the default host name of the ftp server.  This string will be
printed on the greeting message and every time the %L magic cookie
is used.  The host name for virtual servers overrides this value.  If
not specified, the default host name for the local machine is used.
.TP 0.5i
.B email <name>
Defines the email address of the ftp archive maintainer.  This string
will be printed every time the %E magic cookie is used.
.TP 0.5i
.B message <path> {<when> {<class> ...}}
Define a file with <path> such that ftpd will display the
contents of the file to the user login time or upon using the
change working directory command.  The <when> parameter may be
"LOGIN" or "CWD=<dir>".  If <when> is "CWD=<dir>", <dir>
specifies the new default directory which will trigger the
notification.

The optional <class> specification allows the message to be
displayed only to members of a particular class.  More than one
class may be specified.

There can be "magic cookies" in the readme file which cause the
ftp server to replace the cookie with a specified text string:

      %T      local time (form Thu Nov 15 17:12:42 1990)
      %F      free space in partition of CWD (kbytes)
              [not supported on all systems]
      %C      current working directory
      %E      the maintainer's email address as defined in ftpaccess
      %R      remote host name
      %L      local host name
      %u      username as determined via RFC931 authentication
      %U      username given at login time
      %M      maximum allowed number of users in this class
      %N      current number of users in this class
      %B      absolute limit on disk blocks allocated
      %b      preferred limit on disk blocks
      %Q      current block count
      %I      maximum number of allocated inodes (+1)
      %i      preferred inode limit
      %q      current number of allocated inodes
      %H      time limit for excessive disk use
      %h      time limit for excessive files

The following additional cookies are available if you compiled with support for Upload/Download ratios:

      %xu     Uploaded bytes
      %xd     Downloaded bytes
      %xR     Upload/Download ratio (1:n)
      %xc     Credit bytes
      %xT     Time limit (minutes)
      %xE     Elapsed time since login (minutes)
      %xL     Time left
      %xU     Upload limit
      %xD     Download limit


Unless specified otherwise using the show-everytime command, the message will
only be displayed once to avoid annoying the user.  Remember that when
MESSAGEs are triggered by an anonymous FTP user, the <path> must be relative
to the base of the anonymous FTP directory tree.
.TP 0.5i
.B readme <path> {<when> {<class>}}
Define a file with <path> such that ftpd will notify user at
login time or upon using the change working directory command
that the file exists and was modified on such-and-such date.
The <when> parameter may be "LOGIN" or "CWD=<dir>".  If <when>
is "CWD=<dir>", <dir> specifies the new default directory which
will trigger the notification.  The message will only be
displayed once, to avoid bothering users.  Remember that when
README messages are triggered by an anonymous FTP user, the
<path> must be relative to the base of the anonymous FTP
directory tree.

The optional <class> specification allows the message to be
displayed only to members of a particular class.  More than one
class may be specified.
.TP 0.5i
.B show-everytime {message|readme} {yes|no}
Specify whether or not message/readme files are shown every time the user
enters the directory.
Default is no. 
.SH Logging Capabilities
.TP 0.5i
.B log commands <typelist>
Enables logging of individual commands by users.  <typelist> is
a comma-separated list of any of the keywords "anonymous",
"guest" and "real".  If the "real" keyword is included, logging
will be done for users using FTP to access real accounts, and
if the "anonymous" keyword is included logging will done for
users using anonymous FTP.  The "guest" keyword matches guest
access accounts (see "guestgroup" for more information).
.TP 0.5i
.B log transfers <typelist> <directions>
Enables logging of file transfers for either real or anonymous
FTP users.  Logging of transfers TO the server (incoming) can
be enabled separately from transfers FROM the server
(outbound).  <typelist> is a comma-separated list of any of the
keywords "anonymous", "guest" and "real".  If the "real"
keyword is included, logging will be done for users using FTP
to access real accounts, and if the "anonymous" keyword is
included logging will done for users using anonymous FTP. The
"guest" keyword matches guest access accounts (see "guestgroup"
for more information).  <directions> is a comma-separated list
of any of the two keywords "inbound" and "outbound", and will
respectively cause transfers to be logged for files sent to the
server and sent from the server.
.TP 0.5i
.B log security <typelist>
Enables logging of violations of security rules (noretrieve, .notar, ...)
for real, guest and/or anonymous users.
<typelist> is a comma-separated list of any of the keywords "anonymous",
"guest" and "real".  If the "real" keyword is included, logging will be done
for users using FTP to access real accounts, and if the "anonymous" keyword is
included logging will done for users using anonymous FTP. The "guest" keyword
matches guest access accounts (see "guestgroup" for more information).
.TP 0.5i
.B log security <typelist>
Enables logging of violations of security rules (noretrieve, .notar, ...)
for real, guest and/or anonymous users.
<typelist> is a comma-separated list of any of the keywords "anonymous",
"guest" and "real".  If the "real" keyword is included, logging will be done
for users using FTP to access real accounts, and if the "anonymous" keyword is
included logging will done for users using anonymous FTP. The "guest" keyword
matches guest access accounts (see "guestgroup" for more information).
.TP 0.5i
.B log syslog
Redirects the logging messages for incoming and outgoing transfers
to syslog. Without this option the messages are written to xferlog.
.SH Mail Capabilities
.TP 0.5i
.B incmail <address>
Send upload notification messages to <address>.
Multiple incmail lines are multiple recipients.
.TP 0.5i
.B mailfrom <address>
Use <address> as sender of upload notification messages.
.TP 0.5i
.B mailserver <IP>
Use this SMTP server to send upload notification messages. Multiple
mailserver lines provide fallback mailservers.
On some systems, the hostname lookup routine doesn't seem to work properly;
if you are experiencing problems, try specifying the IP address rather than
the hostname and tell bero@linux.net.eu.org which system you're using.

For example:
  incmail  ftpadmin@somewhere.org
  mailfrom BeroFTPD@thisdomain.com
  mailserver mail.thisdomain.com
  mailserver localhost

would notify ftpadmin@somewhere.org of anon-ftp uploads. The message would
be sent from BeroFTPD@thisdomain.com using the mail.thisdomain.com server.
If mail.thisdomain.com was down, the message would be sent from localhost.
On some systems, you have to specify the mailserver's IP rather than its
hostname; on most systems, both variants are ok. Using the IP is always a
safe bet.
.SH Upload/Download ratios
In order for any of these commands to work, you must compile BeroFTPD with
--enable-ratios.
.TP 0.5i
.B ul-dl-rate {*|anonymous|guest} <rate>
Specify Upload/Download ratio (1:rate).
When ftp user uploaded 1 bytes, (s)he can take <rate> bytes.
By default, there is no ratio.
.TP 0.5i
.B limit-time {*|anonymous|guest} <minutes>
Limit the total time a session can take.
By default, there is no limit.
.TP 0.5i
.B limit-upload {*|anonymous|guest} <bytes>
Limit the number of bytes a user can upload in one session.
By default, there is no limit.
.TP 0.5i
.B limit-download {*|anonymous|guest} <bytes>
Limit the number of bytes a user can download in one session.
By default, there is no limit.
.TP 0.5i
.B dl-free {*|anonymous|guest} <filename>
The file <filename> can be downloaded freely (=ignoring the ratio)
.TP 0.5i
.B dl-free-dir {*|anonymous|guest} <dirname>
All files in the directory <dirname> and its subdirectories can be
downloaded freely (=ignoring the ratio)
.SH Miscellaneous Capabilities
.TP 0.5i
.B alias <string> <dir>
Defines an alias, <string>, for a directory.  Can be
used to add the concept of logical directories.

For example:
  alias   rfc:    /pub/doc/rfc

would allow the user to access /pub/doc/rfc from any
directory by the command "cd rfc:".  Aliases only
apply to the cd command.
.TP 0.5i
.B cdpath <dir>
Defines an entry in the cdpath. This defines a search path that is used
when changing directories.

For example:

  cdpath /pub/packages
  cdpath /.aliases

would allow the user to cd into any directory directly under
/pub/packages or /.aliases directories. The search path is defined by
the order the lines appear in the ftpaccess file.

If the user were to give the command:

  cd foo

The directory will be searched for in the following order:

  ./foo
  an alias called "foo"
  /pub/packages/foo
  /.aliases/foo

The cd path is only available with the cd command. If you have a large
number of aliases you might want to set up an aliases directory with
links to all of the areas you wish to make available to users.
.TP 0.5i
.B compress <yes|no> <classglob> [<classglob> ...]
.TP 0.5i
.B tar <yes|no> <classglob> [<classglob> ...]
Enables compress or tar capabilities for any class matching any
of <classglob>.  The actual conversions are defined in the 
external file FTPLIB/ftpconversions.
.TP 0.5i
.B shutdown <path>
If the file pointed to by <path> exists, the server will check
the file regularly to see if the server is going to be shut
down.  If a shutdown is planned, the user is notified, new
connections are denied after a specified time before shutdown
and current connections are dropped at a specified time before
shutdown.  <path> points to a file structured as follows:

 <year> <month> <day> <hour> <minute> <deny_offset> <disc_offset>
 <text>

 <year> any year > 1970
 <month> 0-11 <---- LOOK!
 <hour> 0-23
 <minute> 0-59
.fi
<deny_offset> and <disc_offset> are the offsets in HHMM format
before the shutdown time that new connections will be denied and
existing connections will be disconnected.

<text> follows the normal rules for any message (see "message"),
with the following additional magic cookies available:

     %s      time system is going to shut down
     %r      time new connections will be denied
     %d      time current connections will be dropped

all times are in the form: ddd MMM DD hh:mm:ss YYYY.  There can
be only one "shutdown" command in the configuration file.

The external program ftpshut(8) can be used to automate the
process of generating this file.
.TP 0.5i
.B include <path>
Includes the file specified by <path> as if its contents were part of the
.IR ftpaccess (5)
file.  <path> must be absolute.
.TP 0.5i
.B virtual <address> <ftpaccess directive> (OBSOLETE)
This command is
.B obsolete,
and remains there for backwards compatibility with
wu-ftpd only. New configurations should use the
.IR ftpservers (5)
mechanism to give virtual servers an own ftpaccess file instead.
The command enables the virtual ftp server capabilities. The <address> is the ip address
of the virtual server.  Following this address, any
.IR ftpaccess (5)
directive can be given, save for
.B virtual
and
.B include.
Such directives apply only to the given virtual server, i.e. only when the
IP address to which the user has connected matches the IP address given in
the
.B virtual
directive.  When the IP address matches, any directives given for the
virtual server override the corresponding settings in the main body of the
.IR ftpaccess (5)
file; thus, the main body of the
.IR ftpaccess (5)
file may be considered "default" settings for all virtual servers.

NOTE: Your operating system may not support this feature. It has been tested
on BSD/OS, Solaris 2.X and Linux.
.PP
The <address> may also be specified as the hostname rather than the IP number.
This is strongly discouraged since, if DNS is not available at the time the FTP
session begins, the hostname will not be matched.
.TP 0.5i
.B virtual <address> <hostname|email> <string>
Sets the hostname shown in the greeting message and STATus command, or the email
address used in message files and on the HELP command, to the given <string>.
.TP 0.5i
.B virtual <address> allow <username> [<username> ...]
.B virtual <address> deny <username> [<username> ...]
Normally, real and guest users are not allowed to log in on the vitual server unless they are guests and chroot'd to the virtual root.  The users listed on the virtual allow line(s) will be granted access.  All users can be granted access by giving '*' as the username.  The virtual deny clauses are processed after the virtual allow clauses and are used to deny access to specific users when all users were allowed.
.TP 0.5i
.B virtual <address> private
Normally, anonymous users are allowed to log in on the virtual server.  This option denies them access.
.TP 0.5i
.B defaultserver deny <username> [<username> ...]
.B defaultserver allow <username> [<username> ...]
Normally, all users are allowed access to the default (non-virtual) FTP server.  Use defaultserver deny to revoke access for specific users; specify '*' to deny access to all users.  Specific users can then be allowed using defaultserver allow.
.TP 0.5i
.B defaultserver private
Normally, anonymous users are allowed on the default (non-virtual) FTP server.  This statement disallows anonymous access.

The virtual and defaultserver allow, deny and private clauses provide a means to control which users are allowed access on which FTP servers.
.TP 0.5i
.B passive address <externalip> <cidr>
Allows control of the address reported in response to a PASV command.  When
any control connection matching the
.B <cidr>
requests a passive data connection (PASV), the
.B <externalip>
address is reported.  NOTE: this does not change the address the daemone actually
listens on, only the address reported to the client.  This feature allows the
daemon to operate correctly behind IP-renumbering firewalls.
.PP
For example:
.nf
        passive address 10.0.1.15   10.0.0.0/8
        passive address 192.168.1.5 0.0.0.0/0
.fi
Clients connecting from the class-A network 10 will be told the passive connection
is listening on IP-address 10.0.1.15 while all others will be told the connection
is listening on 192.168.1.5
.PP
Multiple passive addresses may be specified to handle complex, or multi-gatewayed, networks.
.TP 0.5i
.B passive ports <cidr> <min> <max>
Allows control of the TCP port numbers which may be used for a passive data
connection.  If the control connection matches the
.B <cidr>
a port in the range
.B <min>
to
.B <max>
will be randomly selected for the daemon to listen on.  This feature allows firewalls
to limit the ports which remote clients may use to connect into the protected network.
.PP
.B <cidr>
is shorthand for an IP address in dotted-quad notation followed by a slash and the number of
left-most bits which represent the network address (as opposed to the machine address).  For
example, if you're using the reserved class-A network 10, instead of a netmask of 255.0.0.0 use
a CIDR of /8  as in 10.0.0.0/8 to represent your network.
.TP 0.5i
.B lslong <command> [<options> ...]
.TP 0.5i
.B lsshort <command> [<options> ...]
.TP 0.5i
.B lsplain <command> [<options> ...]
The lslong, lsshort and lsplain clauses allow specification of the command and options used
to generate directory listings.  Note the options cannot contain spaces and the
defaults for these clauses are generally correct; use lslong, lsshort or lsplain only if
absolutely necessary.

.SH Permission Capabilities
.TP 0.5i
.B chmod <yes|no> <typelist>
.TP 0.5i
.B delete <yes|no> <typelist>
.TP 0.5i
.B overwrite <yes|no> <typelist>
.TP 0.5i
.B rename <yes|no> <typelist>
.TP 0.5i
.B umask <yes|no> <typelist>
Allows or disallows the ability to perform
the specified function.  By default, all users 
are allowed.

<typelist> is a comma-separated list of any of the
keywords "anonymous", "guest" and "real".
.TP 0.5i
.B passwd-check <none|trivial|rfc822> (<enforce|warn>)
Define the level and enforcement of password checking
done by the server for anonymous ftp.

  none      no password checking performed.
  trivial   password must contain an '@'.
  rfc822    password must be an rfc822 compliant address.

  warn      warn the user, but allow them to log in.
  enforce   warn the user, and then log them out.
.TP 0.5i
.B deny-email <case-insensitive-email-address>
Consider the e-mail address given as an argument as invalid. If passwd-check
is set to enforce, anonymous users giving this address as password cannot
log in.
That way, you can stop users from having stupid WWW browsers use fake
addresses like IE?0User@ or mozilla@. (by using this, you are not shutting
out users using a WWW browser for ftp - you just make them configure their
browser correctly.)
Only one address per line, but you can have as many deny-email addresses
as you like.
.TP 0.5i
.B deny-email <case-insensitive-email-address>
Consider the e-mail address given as an argument as invalid. If passwd-check
is set to enforce, anonymous users giving this address as password cannot
log in.
That way, you can stop users from having stupid WWW browsers use fake
addresses like IE?0User@ or mozilla@. (by using this, you are not shutting
out users using a WWW browser for ftp - you just make them configure their
browser correctly.)
Only one address per line, but you can have as many deny-email addresses
as you like.
.TP 0.5i
.B path-filter <typelist> <mesg> <allowed_charset> {<disallowed regexp> ...}
For users in <typelist>, path-filter defines regular expressions 
that control what a filename can or can not be.  There may be 
multiple disallowed regexps.  If a filename is invalid due to 
failure to match the regexp criteria, <mesg> will be displayed to
the user.  For example:

  path-filter anonymous /etc/pathmsg ^[-A-Za-z0-9\._]*$ ^\\\. ^-

specifies that all upload filenames for anonymous users must be
made of only the characters A-Z, a-z, 0-9, and "._-" and may not
begin with a "." or a "-".  If the filename is invalid, /etc/pathmsg
will be displayed to the user.
.TP 0.5i
.B upload [absolute|relative|-] <root-dir> <dirglob> <yes|no> <owner> <group> <mode> ["dirs"|"nodirs"] [<d_mode>]
Define a directory with <dirglob> that permits or
denies uploads.

If it does permit uploads, all files will be owned
by <owner> and <group> and will have the permissions
set according to <mode>.

Directories are matched on a best-match basis.

For example:
  upload  /var/ftp  *               no
  upload  /var/ftp  /incoming       yes  ftp  daemon  0666
  upload  /var/ftp  /incoming/gifs  yes  jlc  guest   0600  nodirs
.fi
This would only allow uploads into /incoming and 
/incoming/gifs.  Files that were uploaded to 
/incoming would be owned by ftp/daemon and would
have permissions of 0666.  File uploaded to 
/incoming/gifs would be owned by jlc/guest and
have permissions of 0600. Note that the <root-dir> here must 
match the home directory specified in the password database for the
"ftp" user.

You can specify the numerical UIDs/GIDs instead of the usernames
(major speedup on systems with many users and upload lines) by
preceding the number with a "%" sign, such as

  upload  /home/ftp  /incoming   yes   %123  %456  0600  nodirs

where 123 is the UID of the ftp user, 456 the GID of the user group.

The optional "dirs" and "nodirs" keywords can be
specified to allow or disallow the creation of
new subdirectories using the mkdir command.
.PP
If directories are permitted, the optional
<d_mode> determines the permissions for a newly created
directory. If <d_mode> is omitted, the permissions are inferred
from <mode> or are 0777 if <mode> is also omitted.
.PP
The upload keyword only applies to users who
have a home directory (the argument to the chroot() )
of <root-dir>. <root-dir> may be specified as "*" to match any
home directory.
.PP
The <owner> and/or <group> may each be specified as "*", in which case any
uploaded files or directories will be created with the ownership of the
directory in which they are created.
.PP
The optional first parameter selects whether <root-dir> names are
interpreted as absolute or relative to the current chroot'd environment. 
The default is to interpret <root-dir> names as absolute.

.TP 0.5i
.B throughput <root-dir> <subdir-glob> <file-glob-list> <bytes-per-second> <bytes-per-second-multiply> <remote-glob-list>

Defines via a comma-separated <file-glob-list> in subdir matched by
<subdir-glob> under <root-dir> that have restricted transfer throughput of
<bytes-per-second> on download when the remote hostname or remote IP address
matches the comma-separated <remote-glob-list>.

Entries are matched on a best-match basis.

For example:
 throughput /e/ftp *    *     oo   -    *
 throughput /e/ftp /sw* *   1024   0.5  *
 throughput /e/ftp /sw* *     oo   -    *
 throughput /e/ftp /sw* *     oo   -    *.foo.com

This would set maximum throughput per default, but restrict download to
1024 bytes/s for any files under /e/ftp/sw/ which are not named README. The
only exceptions are remote hosts from within the domain foo.com which always
get maximum throughput. Every time a remote client has retrieved a file under
/e/ftp/sw/ the bytes per seconds of the matched entry line are internally
multiplied by a factor, here 0.5. So when the remote client retrieves its
second file it is served with 512 bytes/s, the third time with only 254
bytes/s, the fourth time with only 128 bytes/s and so on.

The string "oo" for the bytes per second field means no throughput
restriction. A multiply factor of 1.0 or "-" means no change of the
throughput after every successful transfer.

Note that the <root-dir> here must match the home directory specified in
the password database for the "ftp" user (or the one set using
the
.B anonymous-root
or
.B guest-root
commands).  The throughput keyword only applies to users who have a home
directory (the argument to the chroot() ) of <root-dir>.

.TP 0.5i
.B anonymous-root <root-dir> [<class>]

<root-dir> specifies the chroot() path for anonymous users.  If no
anonymous-root is matched, the old method of parsing the home directory for the 'ftp'
user is used.  If no <class> is specified, this is the root directory for
anonymous users who do not any other anonymous-root specification.
Multiple classes may be given on the line.
If an anonymous-root is chosen for the user, the 'ftp' user's home directory
in the <root-dir>/etc/passwd file is used to determine the
initial directory and the 'ftp' user's home directory in the system-wide
/etc/passwd is not used.

For example:
  anonymous-root /home/ftp
  anonymous-root /home/localftp localnet

causes all anonymous users to be chroot()'d to the directory /home/ftp
then, if the 'ftp' user exists in /home/ftp/etc/passwd, their initial CWD is
that home directory.  Anonymous users in the class localnet, however, are
chroot()'d to the directory /home/localftp and their initial CWD is taken
from the 'ftp' user's home directory in /home/localftp/etc/passwd .

.TP 0.5i
.B guest-root <root-dir> [<uid-range>]

<root-dir> specified the chroot() path for guest users.  If no guest-root
is is matched, the old method of parsing the user's home directory is used.
If no <uid-range> is specified, this is the root directory for guest users who
do not match any other guest-root specification.  Multiple uid ranges may be
given on the line.  If a guest-root is chosen for the user, the user's home
directory in the <root-dir>/etc/passwd file is used to determine the initial
directory and their home directory in the system-wide /etc/passwd is not used.

<uid-range> specifies numeric UID values.  Ranges are specified by giving
the lower and upper bounds (inclusive), separated by a dash.  Omitting the
lower bound means "all up to", and omitted the upper bound means "all starting
from".

For example:
  guest-root /home/users
  guest-root /home/staff %100-999 sally
  guest-root /home/users/frank/ftp frank

causes all guest users to chroot() to /home/users then starts each user in
their home directory specified in /home/users/etc/passwd.  Users in the range
100 through 999, inclusive, and user sally, will be chroot()'d to /home/staff
and the CWD will be taken from their entries in /home/staff/etc/passwd.
The single user frank will be chroot()'d to /home/users/owner/ftp and the CWD
will be from his entry in /home/users/owner/ftp/etc/passwd

Note that order is important for both anonymous-root and guest-root.  If a
user would match multiple clauses, only the first applies; with the exception
of the clause which has no <class> or <uid-range>, which applies only if no
other clause matches.

.TP 0.5i
.B deny-uid <uid-range> [...]
.TP 0.5i
.B deny-gid <gid-range> [...]
.TP 0.5i
.B allow-uid <uid-range> [...]
.TP 0.5i
.B allow-gid <gid-range> [...]

These clauses allow specification of UID and GID values which will be
denied access to the ftp server.  The allow-uid and allow-gid clauses may be
used to allow access for uid/gid which would otherwise be denied.
These checks occur before all others.
Deny is checked before allow.  The default is to allow access.  Note that
in most cases, this can remove the need for an /etc/ftpusers files.
For example:

  deny-gid %-99 %65535
  deny-uid %-99 %65535
  allow-gid ftp
  allow-uid ftp

denies ftp access to all privileged or special users and groups on a Linux
box except the anonymous 'ftp' user/group.  In many cases, this can eliminate
the need for the /etc/ftpusers file.  support for that file still exists so
it may be used when changing /etc/ftpaccess is not desired.

Throughout the ftpaccess file, any place a single UID or GID is allowed,
either names or numbers may be used.  To use numbers, put a '%' before it.
In places where a range is allowed, put the '%' before the range.

.TP 0.5i
.B site-exec-max-lines <number> [<class> ...]

The SITE EXEC feature traditionally limits the number of lines of output which may be sent
to the remote client.  This clause allows you to set this limit.  If omitted, the limit is
20 lines.  A limit of 0 (zero) implies no limit; be very careful if you choose to remove
the limit.  If a clause is found matching the remote user's class, that limit is used.
Otherwise, the clause with class '*', or no class given, is used.  For example:


    site-exec-max-lines 200 remote
    site-exec-max-lines 0 local
    site-exec-max-lines 25

Limits output from SITE EXEC (and therefore SITE INDEX) to 200 lines for 'remote' users,
specifies there is no limit at all for 'local' users, and sets a limit of 25 lines for
all other users.

.SH Files
FTPLIB/ftpaccess
.SH See Also
.BR ftpd(8),
.BR umask(2) ,
.BR ftplog(5) ,
.BR ftpconversions(5) ,
.BR ftpshut(8)

