%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1013.500000 340.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.5 (Build 17F77) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2027 680
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2027 680
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /a put
dup 35 /r put
dup 36 /g put
dup 37 /e put
dup 38 /t put
dup 39 /space put
dup 40 /A put
dup 41 /p put
dup 42 /l put
dup 43 /i put
dup 44 /c put
dup 45 /o put
dup 46 /n put
dup 47 /S put
dup 48 /y put
dup 49 /s put
dup 50 /B put
dup 51 /m put
dup 52 /w put
dup 53 /h put
dup 54 /I put
dup 55 /u put
dup 56 /d put
dup 57 /P put
dup 58 /F put
dup 59 /b put
dup 60 /k put
dup 61 /parenleft put
dup 62 /v put
dup 63 /comma put
dup 64 /parenright put
dup 65 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




B80000DC411B0006000000160000002600000036000000460000005600000066000000760000008600000096000000A6000000B6000000C60000000D5D410500D5000000E5000000025DB8001610B8000AD0B8000A2FB8001610B80018D0B800182FB8001610B8002AD0B8002A2FBA002B00220015111239B8001610B8002CD000B800152FBA000F002700032BB8000F10BA001D000500032BB8001D10303137343E0233321E0215140E0223222E0205112311232E0323220E0215141E023332363733157E10243C2B2C3E271211263C2B293D2713019055020E292E2E143B593B1D1E3B593C365A1502FE264838222136472624463722203645DA02CAFEF6171F13082B49623737624A2C262B46000000020024FFF502030211000A0026005BBA0014001F00032BB8001410BA0015000000032BB8001510B8001410B80001D0B8000010B8000CD0B8000C2F00BA000F002400032BB8000F10BA001A000600032BB8001A10BA0001001400032BB8000110B8002410B8000CDC303101213E0333321E0217230E0123222E023721362E0223220E02151E0333323601A7FED702162635212035271754540B45362A3E28120101830215375B4535594124021F3E5B3E587401341E352817172736AE33321C2F3D222F6858392848623B3B6448285800020024FF2F01FE02110028003C00BDBA002E000C00032BB8002E10BA0001000200032BB8000110B8000210B80038D0B800382FBA000400020038111239B8000210B80015D0411B0006002E0016002E0026002E0036002E0046002E0056002E0066002E0076002E0086002E0096002E00A6002E00B6002E00C6002E000D5D410500D5002E00E5002E00025DBA0021000C002E111239B800212FB80020DCB8000110B8003EDC00BA001B002600032BB8001B10BA0007003300032BB8000710BA0029001100032BB8002910303125112315232E0123220E0215141E02333236373315140E0223222E0227231E0333323627222E0235343E0233321E0215140E0201FE5001175231435C38181D3A563A3259160211263A2A152E271B015502283D4B247C74EE2A38220E11253A292838231011243B2C01D94A2B2B334F612E355F472A2D30222B48331D091420172A3A24107E98233946232544341F20354222244839230000010040000001EC02CA001A0051BA001A000000032BB8001A10BA000E000B00032BB8000E10B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000C2FBA0013000800032BB8001310BA001900010000111239303113113311343E0233321615113311342E0223220E02072311405513263927313855112A443317312D240A0202CAFD360124233B2C183830FEA201542A45321C0A1521180111000200450000009A02CA00030007002FBA0001000200032B



0BE40C4E0CC80CFE0001000000230096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/A 5 def
/B 6 def
/F 7 def
/I 8 def
/P 9 def
/S 10 def
/T 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/g 17 def
/h 18 def
/i 19 def
/k 20 def
/l 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/r 26 def
/s 27 def
/t 28 def
/u 29 def
/v 30 def
/w 31 def
/y 32 def
/fi 33 def
/uni2B91 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93142184C9D9AF35B09B9B2CFE320E80E6018C5839BB77E6DFC734C68F04E32204ECD50C076125AD301E3AE64DEB7F094723D25C1780CE8027A950E3CCA7F001CECDABE8253D8557773A892F730B9890F9C876753CFCFCA9B2F42F6D2194163BE52F3B1461CFEE994725A4013539A6CFEE36B6062B069096932110A7D9B7416BA22FDF439F2F9359BD5C7AA187BB0B06910620B9FA20875E02A7AD879F32097A101A60312A3EA62AF2DF6AA5A0CB467092632B48FD11D20AF861A65D8666ECD5ECBD918F43545681C57B2136FE149BF9507DEA93BA8D8E1F2A8E088730891893C9B4DD4AE93BCC83819F43297505964338EACF8E832202038C0E1DE1C1BD37D14F39ABABCCF8283750DE7AA7EB5CB3519FA10D8C54016BB5E7785A4868CB37E7A228F1F18F5323213EAF45C41C03D6599DD0CD6582001D0D8DD5186CA3657C28932E55DD2CA841900F56CE8FB489B3D719468E0B6B42A121A2FDBB36851395E13969F116A315BCDB46176A3982A58711A269129B9B766C80127D1A6ED84FEC5E0A2E210DA5999DDEFDEC3F0257CA61D869B88907512C571D79752AD53550A7E4B79B33D88D6BEC5BB947799C87F36E32B508492C11158404D706D45E1833BFBB049345549C908443E7D7AC29BC2E2178580A9CC337790E2CC6CCBDC2E9FB148A3591152763987013335F8E619A57CEF7EE508702F19A7F794D6BA16BA966AF747A7D672B5A4383380016FCAF04B8E9C17F4F0A2D3F67DED99C9D13E4A50A83635F

FD1F1BF1538E42673B37C27E50522BE47A86BF8C3E93559E2918C1C26EE43E09733E94159F5123CA8BAFDCEFC380F9BFD369D22FC3AFFA0265ECFED3C70FCC8579BFB800C6C31F0C8326514ED968E408992AFB010EAE635AE6372B5D708E1B28BB82711E802FB3EEBB5195B4C67F7D2E0EF1E266860B2F8BA6F2A046B55B3831723AA0CA6391614E9706108C4D7BCC2E9AEE336221A3A25DB93280D21F43AAF45ECDC112793DCEEF9D5E4F8B1173103A05A9BF993A9134F701E2A8C75757815B26469431A4AE64A608824C45EAE8EA5BF3B14AD39DDBB39A5CC1FC40B8B8198008AC954528578A810096829E0F3A2418D36925C0EE51C5899BC4CBDE81DB8B3431CC258B9991B392AC981BA7479728BC37F7F98BF2D364D912DCEC5CF68A6436E2CA7E7675EE14DF5969227867F51B7F82A0DA36FD8847CB2090B0CF7BCD06E60B14CE43A636EC9AB176D4C0EB79400D06FCADD12B4840DED4325035CDB3CC043B7DC21562087B22ECFBA1045E5F540333E8681E944BADD39B2A1938A62AD044804B057D15F9A7BBE4B155AE953FAE4B5B0643DBA21B7374A60C4F00478F0083C4F34243987F17B9A91C2819A30E38B27BB66561B5927DB6D5ED5E2580E1841F82846ECFF685E3FD33EDEDEC269707D0E01D94120625AF2D4C2F9A086D1D2AFEA35458B716C533214727F4D9337B178B2745D9455FEEBEF09DCFB93DC3E8BCDEAF3E691183EAEC1DAA167AF6A2AF059E4ABE231D41969021ABEAD4AB464FBE557ECE543B5146DE038B55FBD2BB984CF92CB5D63B877E2B6C6571BD14CE4BCCEA5B477D3D20C95053A755ED3AA6F91DE2B26575280464089ACB29D8AFCC47F6953B9842D896F77712D2FB7BDFB3DC4D126F0ACBCBE6FC850E91E4260E155AD103E83C99AAF7FCAFF44BEA2C373D110A781CD1B318DB69CBBBF56848AA3A9B63291B105A7CE1BD807FBD15966B76C6FE361BAD71774F9F8FB8A42EC91AFEA975A77335CA3D9E3DB15EF4C1CE9542842BAC87B78CD528B50C6699F771DDE6F1ABB4AE6150D65BAA2009014DBDAC13AB75A829E47FC94FE0E39D006A63D14E1B1DC6CD76B22108F4B4240E5899AB9B131BAC284646C90CFBC45B657C49384767DC8BDE33372BC55B00EC4E65EFD66B2D84C27B0BD45E2F316762EE59CBA1B3D33AAD31788418CDCAE9BED0BBAEDE42407704A0AC8EFC0CE380F7A72EBE2276F85054D30C61087DBA51D5C48FF46382DCA753E4560E8A2EC1B5049B4B725636B31BD715B35D2373B225F4AA17AF16FCFCAE5612C2BCB40AE551C8E4ED8B29F6B9AB8AF68189CB2D196F871543AA773EB74A08D3026895FD8FC4E21D7574DCD6189E502859FFC774CEDAAD40EE8902A408E9EB77744DD122A3E40E6D216CE88728C803562AD74CC7FFCA4BF0B444ABE4A7B36F8EB623F0AB552ED260D6A185F65A8470

66D07B9452FF400516E099893E3459A2BFAB5701882E3A717FDA0C5AF5A6AE910C265EC239BD3C9FABE477EC54D745032F348F9316C1BBFBEA66DDB38BD14FC063B1F645FD88CC4D16AFB739FA8DC6D453633E4DAFC7678D0FEDB3953D245B4409C2469C597802A15395FB6B154948DB0B62EC65A599E5273447DCDD5A28C6D83ED5DA42A3E711A702CD5CC730BCAFB53198FD859B446A4750F84C3106C3757F7F789EFA7A76A8FFDC09FEB2B3618126C66BB056405921C2153829ABE759A5F9CDC110DC13BD26E2D89636D66BDB0FC7886FB33E744665E18EF190AE85DB544C2EFBB3D4CFB04161BC0B74AB47243369498F425C9C49BA7D63C6CFE5E028C05EDC96E267EE65A46168E45C73A2AE66A0C46150D1FB7A2C5BD1D4F2F204B86306D6B1A4CED94CA3C6865328F98888C1428040CD487433ED2EB1AABFA3A58EBA9754A7B69A3DC377B2D72182217D4AB96A2366DE3B25920918015CCEC85715E457A0E3CA7D52E5DD38B53E866113673C31BB5B38C6CDBF4EB778135909913D407FF9DCBAECA44EC3113C2CEC46873050FEA66DC1B082313FFD2942824BB05B4C62F16CF6E742AE27C163AA004F39D890F6F664FB7A426651A5231168ADA8AC23CDA464AF8083C6A0DC9C802CC2D49C87293835873476953F735B74AB8112F1AC7E688FD385EF3015C5CF146470304839515C8E7A2754CDA5E27999A1C716370C4275545B049BAFFB3BC4BBD4588D225E16B18274384EE067ED278B028E73F6ECFAA4A4E2F6B2A6BDED3D7E199C66D5D634A86F3D3AEE082D6326FABD0DB9B5AE8309AC5309D740773764A6066AD7866FD4EBD028DBDABD2C6C2FCB31E19FDF7BED09B60201F4A5DAFEB198476FE03E14537D28D17E17E7295FD9464DA26EC423BC3A080D12F584FFC8A7163933F5A200597EE042F44E7CE0E342649B54FF6FAF7FBDAF954936AD42E02EC3094F3040881943B34BD67A0CEB4C254BED612011C6BF6BE3B3784519C2415592A68CDDDD4BB9B160FB70613ECE8AA6862B1B2B663323B8A4DFEEA2C721F07A00BF546E06C556F81D7A5B4960B65FD953CC529890A30924553F2C0BDB202EA3B2CEBF9D75629BDC4C6DDDA2E844206B8C92E3C56F767CA839D5DB63563AB16CFE4A38F4BFFBF8F3FBBFDAD3900F64D8BE8D5A894F6343514D18D769DC164CA7507BC4659CF86CE2333050856BF85934AE8CD4C2539EA5237F73177F609FB55D57E353820BC79C019C25DB4C039140E65BEC7FD2057EB414335871A082CCF0989AFB4038BEB393E35614BFD027F0D0CCDED563A4BE1C8C9FBA71C15BA7F3717697537E0AF477958C37A5CAA2C7BE92CFC5B997A50C8F7B561EBB62EA902DA8E1B5D74125BC5F2FCD0FDB4661169416204C9D07696362896956B14CDF22DBCEB60DE3CEC760E91B4A2DEF38CDDBF501F9E8951E6645F99A
C4AA1606B520B92C62E9387132C00592D50DBA959FF2FDCEFEE14CD8F1C68518765771D5070693113DB9769E20124D642A74B954C1E98F9ED2A40A6EC713280EB15290C43540EAAC501A3E866648B73FC39A8CCB2DB60F67846265EB98BD1D38BF641A605F33A25082B893C65C93485BF3A46EB53B2BA8C25528562863A6487179E8392B467388C67A16F0FB826D4912C3B3D96FC9736B94298B59952D5B0764037224A55FACDB4AB956BBB6A03545A305A1BB3B97DA38CB0DC08A993791DF305E49B2BCEB0D2D856916988166834AEAACEBB6AF951920FAEF63E86699F87445AED5B6D938B40323AC0403106177846343DF1D624943327BF646F745C3A302DA7A3195EBE1BDF9EB4D6E2EDCDDC94EA49B8065BB0B39DA7D3BA9C16E3366417D9D34EDE79050DD60DE81D6463E2AF786E2AD1DFF316CCC952BDF3398D44C5C4B4BC1B591D3A405F58AC2BCE2EE307F8F775D56702C9EC62D86C9C379EEEBE1EE5F062A35B626E017E3B45AE80113BE413F589C5604EBC62FDD58DAB15532C7919DF9D1A5662F901449AA97D7040CB0350A48129163B17B3297068B2211DDBFA03592232016CD1074022A37B8B2B076CDA2739E265757AA37EC0AC63C3F99FBAA62A05EF51A76A8CC1F93793DC795A22377A35548172753FF15857C5ED09A62B0BD2E542065907C018158C7C17C6DA48A5440A0D17D5DB937F716E920E57F73E7FCF9B1FC7ABAAB91FF2AAB16514F428C698FFEA1C2F1C5E7138C29ECCCB4513FD1B72187056B66446C4421E79593A474A5E0643F72AE32082B0C7CA8684BC882ACC189D3A3147B56B916028E63A1EC9EC5AECB1FB533ED72A7206DAC1B2610BFD425BA7399550D412AD6B6D8FE4CB7BC068F3D72051430324D904739F702918BCCE1B4C55BB4C585470975F2223BFDD6D67DFFCBDB1B7328FEC8C8BE23DA8B9CAE8E91C967FB0FA54590053EFD63AD0C8252D3DCF6D9D6F67B1D9B6D8A3BB38D1A10A5822C9C18EB91A97233AA16433AB32E86C62F345E44911F7867434C1353810310C4DE3E92344ABA612E5563A08527A4DF4962675C68054DD0974FC3ED50FF98607E5CC914F5AC47E8FA08755904AEAA961E72E75E35BCEBFBBC83542BFC48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs4 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 2027 680 rc
0 680 m
2027 680 l
2027 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-2276.5432 2326.9136 m
4303.7036 2326.9136 l
4303.7036 -1645.9259 l
-2276.5432 -1645.9259 l
h
-2276.5432 2326.9136 m
f
595.79999 679 m
843 679 l
781.20001 554 l
534 554 l
h
595.79999 679 m
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
233.89999 81.5 m
357.5 81.5 l
326.60001 144 l
203 144 l
h
233.89999 81.5 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 688.5 616.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-21.848 -3.447998 m
(!"#$%&')[ 7.408000 8.592000 4.880000 9.184000 8.592000 5.040000 0.000000 ] xS
-35.408001 15 m
(\(\)*+,"+&-.)[ 10.368000 9.488000 3.552000 3.552000 8.592000 8.592000 3.552000 5.040000 9.184000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
947 679 m
1256 679 l
1256 554 l
947 554 l
h
947 679 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
409.5 81.5 m
564 81.5 l
564 144 l
409.5 144 l
h
409.5 81.5 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1101.5 616.5 cm
-52.296001 5.776001 m
(/&"&+,'\(."*01+1)[ 10.368000 5.040000 8.592000 5.040000 3.552000 8.592000 4.448000 10.368000 8.896000 8.592000 3.552000 8.000000 8.000000 3.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1641 645.2674 m
1641 656.06665 1637.4313 657.40271 1611.3629 668.09021 c
1611.0875 668.20081 l
1584.8815 679 1584.6089 679 1557.7144 679 c
1521.9038 679 1360 679 1360 679 c
1360 565 l
1641 565 l
1641 645.2674 l
h
1641 645.2674 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
756.5 98.366302 m
756.5 92.96669 754.71564 92.298653 741.68146 86.954903 c
741.54376 86.899612 l
728.44073 81.5 728.30444 81.5 714.85718 81.5 c
696.9519 81.5 616 81.5 616 81.5 c
616 138.5 l
756.5 138.5 l
756.5 98.366302 l
h
756.5 98.088142 m
756.5 92.96669 756.3623 92.96669 728.30444 92.96669 c
728.30444 92.96669 l
728.30444 81.555862 728.30444 81.5 715.68054 81.5 c
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1500.5 622 cm
-45.639999 -3.447998 m
(22'1%3".&+,')[ 10.960000 10.960000 4.448000 8.000000 8.592000 13.648000 8.592000 8.896000 5.040000 3.552000 8.592000 0.000000 ] xS
-23.695999 15 m
(4%+$5&)[ 12.128000 8.592000 3.552000 9.184000 8.896000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1745 679 m
2026 679 l
2026 565 l
1745 565 l
h
1745 679 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
808.5 81.5 m
949 81.5 l
949 138.5 l
808.5 138.5 l
h
808.5 81.5 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1885.5 622 cm
-55.872002 5.776001 m
(6.1&#73%.&"&+-.)[ 4.144000 8.896000 8.000000 5.040000 5.328000 8.896000 13.648000 8.592000 8.896000 5.040000 8.592000 5.040000 3.552000 9.184000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
2 0 0 -2 128 842 cm
342.04999 112.75 m
399.60001 112.75 l
S
0 i
CM
943.20001 616.5 m
927.20001 622.5 l
927.20001 610.5 l
h
943.20001 616.5 m
f
0 J
0 j
2 0 0 -2 128 842 cm
407.60001 112.75 m
399.60001 109.75 l
399.60001 115.75 l
h
407.60001 112.75 m
S
1 J
1 j
0.60000002 i
564.5 112.5 m
606.10211 111.64574 l
S
0 i
CM
1356.2008 619.03699 m
1340.0811 624.70721 l
1340.3274 612.70978 l
h
1356.2008 619.03699 m
f
0 J
0 j
2 0 0 -2 128 842 cm
614.1004 111.48151 m
606.04053 108.64638 l
606.1637 114.64512 l
h
614.1004 111.48151 m
S
1 J
1 j
0.60000002 i
756.5 110 m
798.59998 110 l
S
0 i
CM
1741.2 622 m
1725.2 628 l
1725.2 616 l
h
1741.2 622 m
f
0 J
0 j
2 0 0 -2 128 842 cm
806.59998 110 m
798.59998 107 l
798.59998 113 l
h
806.59998 110 m
S
/Cs2 SC
1 1 1 sc
CM
1 23.4 m
1 114.6 l
1 120.8928 43.560001 126 96 126 c
148.44 126 191 120.8928 191 114.6 c
191 23.4 l
191 17.107201 148.44 12 96 12 c
43.560001 12 1 17.107201 1 23.4 c
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
-63.5 409.29999 m
-63.5 363.70001 l
-63.5 360.55359 -42.220001 358 -16 358 c
10.22 358 31.5 360.55359 31.5 363.70001 c
31.5 409.29999 l
31.5 412.44641 10.22 415 -16 415 c
-42.220001 415 -63.5 412.44641 -63.5 409.29999 c
-63.5 363.70001 m
-63.5 366.84641 -42.220001 369.39999 -16 369.39999 c
10.22 369.39999 31.5 366.84641 31.5 363.70001 c
S
/Cs4 SC
0 sc
0 i
2 0 0 -2 96 69 cm
-18.52 8.6260014 m
(/%%8)[ 10.368000 8.592000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
485.5 13.5 m
485.5 113.5 l
485.5 120.4 577.78802 126 691.5 126 c
805.21198 126 897.5 120.4 897.5 113.5 c
897.5 13.5 l
897.5 6.5999999 805.21198 1 691.5 1 c
577.78802 1 485.5 6.5999999 485.5 13.5 c
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
178.75 414.25 m
178.75 364.25 l
178.75 360.79999 224.894 358 281.75 358 c
338.60599 358 384.75 360.79999 384.75 364.25 c
384.75 414.25 l
384.75 417.70001 338.60599 420.5 281.75 420.5 c
224.894 420.5 178.75 417.70001 178.75 414.25 c
178.75 364.25 m
178.75 367.70001 224.894 370.5 281.75 370.5 c
338.60599 370.5 384.75 367.70001 384.75 364.25 c
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 691.5 63.5 cm
-36.888 8.901001 m
(/%%8'9--*)[ 10.368000 8.592000 8.592000 9.488000 4.448000 10.368000 9.184000 9.184000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1734 380 m
2026 380 l
2026 1 l
1734 1 l
h
1734 380 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
803 231 m
949 231 l
949 420.5 l
803 420.5 l
h
803 231 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1880 190.5 cm
-35.416 -3.447998 m
(:%%8;",<)[ 9.184000 8.592000 8.592000 9.488000 9.488000 8.592000 8.592000 0.000000 ] xS
-65.32 15 m
(=,->%#"$%?'4%+$5&@)[ 4.144000 8.592000 9.184000 8.000000 8.592000 5.328000 8.592000 9.184000 8.592000 4.448000 4.448000 12.128000 8.592000 3.552000 9.184000 8.896000 5.040000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1322 137 m
1614 137 l
1614 12 l
1322 12 l
h
1322 137 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
597 352.5 m
743 352.5 l
743 415 l
597 415 l
h
597 352.5 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1468 74.5 cm
-15.4 5.776001 m
(A*&%#)[ 8.288000 3.552000 5.040000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
537 380 m
846 380 l
846 255 l
537 255 l
h
537 380 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
204.5 231 m
359 231 l
359 293.5 l
204.5 293.5 l
h
204.5 231 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 691.5 317.5 cm
-22.368 5.776001 m
(/%*%,&)[ 10.368000 8.592000 3.552000 8.592000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
921 380 m
1230 380 l
1230 255 l
921 255 l
h
921 380 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
396.5 231 m
551 231 l
551 293.5 l
396.5 293.5 l
h
396.5 231 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1075.5 317.5 cm
-24.903999 5.776001 m
(37&"&%)[ 13.648000 8.896000 5.040000 8.592000 5.040000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
1305 380 m
1614 380 l
1614 255 l
1305 255 l
h
1305 380 m
f
0.60000002 i
0.5 0.5 0.5 sc
2 0 0 -2 128 842 cm
588.5 231 m
743 231 l
743 293.5 l
588.5 293.5 l
h
588.5 231 m
S
/Cs1 SC
0 sc
0 i
2 0 0 -2 1459.5 317.5 cm
-30.224001 5.776001 m
(&%1&,"1%)[ 5.040000 8.592000 8.000000 5.040000 8.592000 8.592000 8.000000 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
2 0 0 -2 128 842 cm
877.5 139 m
876.84058 221.10033 l
S
0 i
CM
1881.5526 383.79987 m
1887.6809 399.75116 l
1875.6813 399.84756 l
h
1881.5526 383.79987 m
f
0 J
0 j
2 0 0 -2 128 842 cm
876.77631 229.10007 m
879.84045 221.12442 l
873.84064 221.07622 l
h
876.77631 229.10007 m
S
1 J
1 j
0.60000002 i
744.5 263.5 m
794.05194 286.95709 l
S
0 i
CM
1730.5654 261.23996 m
1718.6711 273.50885 l
1713.5367 262.66272 l
h
1730.5654 261.23996 m
f
0 J
0 j
2 0 0 -2 128 842 cm
801.28271 290.38004 m
795.33557 284.24557 l
792.76837 289.66864 l
h
801.28271 290.38004 m
S
1 J
1 j
0.60000002 i
803 346.30341 m
752.52948 360.51355 l
S
0 i
CM
1617.6578 116.63666 m
1634.6851 115.19747 l
1631.4329 126.74837 l
h
1617.6578 116.63666 m
f
0 J
0 j
2 0 0 -2 128 842 cm
744.82892 362.68167 m
753.34253 363.40128 l
751.71643 357.62582 l
h
744.82892 362.68167 m
S
1 J
1 j
0.60000002 i
281.75 358 m
281.75 303.39999 l
S
0 i
CM
691.5 251.2 m
685.5 235.2 l
697.5 235.2 l
h
691.5 251.2 m
f
0 J
0 j
2 0 0 -2 128 842 cm
281.75 295.39999 m
278.75 303.39999 l
284.75 303.39999 l
h
281.75 295.39999 m
S
1 J
1 j
0.60000002 i
359 262.25 m
386.60001 262.25 l
S
0 i
CM
917.20001 317.5 m
901.20001 323.5 l
901.20001 311.5 l
h
917.20001 317.5 m
f
0 J
0 j
2 0 0 -2 128 842 cm
394.60001 262.25 m
386.60001 259.25 l
386.60001 265.25 l
h
394.60001 262.25 m
S
1 J
1 j
0.60000002 i
552.5 264 m
578.6012 263.59668 l
S
0 i
CM
1301.2004 315.05386 m
1285.1096 320.80594 l
1285.295 308.80737 l
h
1301.2004 315.05386 m
f
0 J
0 j
2 0 0 -2 128 842 cm
586.60022 263.47305 m
578.55481 260.59702 l
578.64752 266.59631 l
h
586.60022 263.47305 m
S
1 J
1 j
0.60000002 i
31.5 386.93872 m
168.85042 388.20728 l
S
0 i
CM
481.70016 65.437698 m
465.75626 71.585213 l
465.64542 59.585724 l
h
481.70016 65.437698 m
f
0 J
0 j
2 0 0 -2 128 842 cm
176.85008 388.28116 m
168.87813 385.2074 l
168.82271 391.20715 l
h
176.85008 388.28116 m
S
1 J
1 j
0.60000002 i
596 385 m
394.64911 387.72311 l
S
0 i
CM
901.29968 66.337387 m
917.37933 60.554302 l
917.21704 72.553207 l
h
901.29968 66.337387 m
f
0 J
0 j
2 0 0 -2 128 842 cm
386.64984 387.8313 m
394.68967 390.72284 l
394.60852 384.72339 l
h
386.64984 387.8313 m
S
ep
end
%%Trailer
%%EOF
